(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{411:function(n,e,t){"use strict";t.r(e);var o=t(12),l=Object(o.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("MVVM和MVC都是软件架构模式，但是它们在结构和功能上有一些主要的区别。")]),n._v(" "),e("p",[n._v("结构区别：")]),n._v(" "),e("p",[n._v("MVVM包括视图层、模型层和ViewModel层，各部分之间的通信是双向的。在MVVM中，ViewModel充当视图（View）和模型（Model）之间的中介，并向视图公开数据和命令（Command）。 ViewModel通过数据绑定机制将其状态同步到视图上。这种方式有助于提高应用程序的可测试性以及使用数据绑定带来的生产力增益。")]),n._v(" "),e("p",[n._v("MVC包括视图层、控制层和模型层，各部分之间的通信是单向的。在MVC中，控制器（Controller）充当视图（View）和模型（Model）之间的中介，将用户输入从视图传递到模型并将模型状态更新反映回视图。这种方式有助于分离应用程序的不同部分,并促进代码重用和可维护性。")]),n._v(" "),e("p",[n._v("功能区别：")]),n._v(" "),e("p",[n._v("MVVM是真正将页面与数据逻辑分离放到js里去实现，而mvc里面未分离。\n")]),e("style",[n._v("\n.v[data-class=v]{\nmargin: auto;\nwidth: 80%;\n}\n.vedit {\nheight: 50px;\n}\n")]),e("p")])}),[],!1,null,null,null);e.default=l.exports}}]);